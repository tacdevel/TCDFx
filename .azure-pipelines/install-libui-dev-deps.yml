####################################################################################################
## FileName:             install-libui-dev-deps.yml
## Copyright:            Copyright Â© 2017-2019 Thomas Corwin, et al. All Rights Reserved.
## License:              https://github.com/tom-corwin/tcdfx/blob/master/LICENSE.md
####################################################################################################

parameters:
  pythonVersion: '3.7.3' # This differs from libui's default

steps:

#! InstallLibuiDevDeps_InstallPython_Windows
- script: |
    @powershell -Command "Invoke-WebRequest https://www.python.org/ftp/python/${{ parameters.pythonVersion }}/python-${{ parameters.pythonVersion }}-amd64-webinstall.exe -OutFile C:\py-setup.exe"
    C:\py-setup.exe /quiet PrependPath=0 InstallAllUsers=0 Include_launcher=0 InstallLauncherAllUsers=0 Include_test=0 Include_doc=0 Include_dev=0 Include_debug=0 Include_tcltk=0 TargetDir=C:\Python${{ parameters.pythonVersion }}
    @echo ##vso[task.prependpath]C:\Python${{ parameters.pythonVersion }}
    @echo ##vso[task.prependpath]C:\Python${{ parameters.pythonVersion }}\Scripts
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  name: InstallLibuiDevDeps_InstallPython_Windows
  displayName: InstallLibuiDevDeps_InstallPython_Windows
  workingDirectory: $(Build.Repository.LocalPath)\external\libui
  continueOnError: false
#! InstallLibuiDevDeps_InstallPython_Unix
- task: UsePythonVersion@0
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  name: InstallLibuiDevDeps_InstallPython_Unix
  displayName: InstallLibuiDevDeps_InstallPython_Unix
  inputs:
    versionSpec: ${{ parameters.pythonVersion }}
    architecture: 'x64'

#! InstallLibuiDevDeps_InstallMeson_Windows
- script: |
    python -m pip install --upgrade pip setuptools wheel
    pip install meson
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  name: InstallLibuiDevDeps_InstallMeson_Windows
  displayName: InstallLibuiDevDeps_InstallMeson_Windows
  workingDirectory: $(Build.Repository.LocalPath)\external\libui
  continueOnError: false
#! InstallLibuiDevDeps_InstallMeson_Unix
- script: |
    python -m pip install --upgrade pip setuptools wheel
    pip install meson
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  name: InstallLibuiDevDeps_InstallMeson_Unix
  displayName: InstallLibuiDevDeps_InstallMeson_Unix
  workingDirectory: $(Build.Repository.LocalPath)/external/libui
  continueOnError: false

#! InstallLibuiDevDeps_InstallGtk_Linux
- script: sudo apt-get install libgtk-3-dev
  condition: eq( variables['Agent.OS'], 'Linux' )
  name: InstallLibuiDevDeps_InstallGtk_Linux
  displayName: InstallLibuiDevDeps_InstallGtk_Linux
  workingDirectory: $(Build.Repository.LocalPath)/external/libui
  continueOnError: false

#! InstallLibuiDevDeps_InstallNinja_Windows
- script: |
    @powershell -Command "Invoke-WebRequest https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip -OutFile C:\ninja-win.zip"
    mkdir C:\ninja
    @powershell -Command "Expand-Archive -LiteralPath C:\ninja-win.zip -DestinationPath C:\ninja"
    @echo ##vso[task.prependpath]C:\ninja
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  name: InstallLibuiDevDeps_InstallNinja_Windows
  displayName: InstallLibuiDevDeps_InstallNinja_Windows
  workingDirectory: $(Build.Repository.LocalPath)\external\libui
  continueOnError: false
#! InstallLibuiDevDeps_InstallNinja_Linux
- script: sudo apt-get install ninja-build
  condition: eq( variables['Agent.OS'], 'Linux' )
  name: InstallLibuiDevDeps_InstallNinja_Linux
  displayName: InstallLibuiDevDeps_InstallNinja_Linux
  workingDirectory: $(Build.Repository.LocalPath)/external/libui
  continueOnError: false
#! InstallLibuiDevDeps_InstallNinja_macOS
- script: |
    sudo mkdir -p /opt/ninja
    pushd /opt/ninja
    sudo wget https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-mac.zip
    sudo unzip ninja-mac.zip
    sudo chmod a+rx ninja
    popd
    echo '##vso[task.prependpath]/opt/ninja'
  condition: eq( variables['Agent.OS'], 'Darwin' )
  name: InstallLibuiDevDeps_InstallNinja_macOS
  displayName: InstallLibuiDevDeps_InstallNinja_macOS
  workingDirectory: $(Build.Repository.LocalPath)/external/libui
  continueOnError: false