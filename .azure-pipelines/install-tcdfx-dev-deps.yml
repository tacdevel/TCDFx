####################################################################################################
## FileName:             install-tcdfx-dev-deps.yml
## Copyright:            Copyright Â© 2017-2019 Thomas Corwin, et al. All Rights Reserved.
## License:              https://github.com/tom-corwin/tcdfx/blob/master/LICENSE.md
####################################################################################################

parameters:
  dotnetVersion: ''
  dotnetChannel: 'Current'

steps:
#! InstallTCDFxDevDeps_InstallDotNet_Windows
- powershell: |
    Invoke-WebRequest 'https://dot.net/v1/dotnet-install.ps1' -OutFile 'dotnet-install.ps1'
    ./dotnet-install.ps1 -Channel '${{ parameters.dotnetChannel }}' -Version '${{ parameters.dotnetVersion }}'
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  name: InstallTCDFxDevDeps_InstallDotNet_Windows
  displayName: InstallTCDFxDevDeps_InstallDotNet_Windows
  workingDirectory: $(Build.Repository.LocalPath)
  continueOnError: false
#! InstallTCDFxDevDeps_AddDotnetToPath_Windows
- script: setx path "%PATH%;C:\Users\VssAdministrator\AppData\Local\Microsoft\dotnet\"
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  name: InstallTCDFxDevDeps_AddDotnetToPath_Windows
  displayName: InstallTCDFxDevDeps_AddDotnetToPath_Windows
  workingDirectory: $(Build.Repository.LocalPath)
  continueOnError: false

#! InstallTCDFxDevDeps_InstallDotNet_Unix
- script: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel ${{ parameters.dotnetChannel }} --version ${{ parameters.dotnetVersion }}
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
  name: InstallTCDFxDevDeps_InstallDotNet_Unix
  displayName: InstallTCDFxDevDeps_InstallDotNet_Unix
  workingDirectory: $(Build.Repository.LocalPath)
  continueOnError: false