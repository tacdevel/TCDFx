####################################################################################################
## FileName:             run-dotnet-build.yml
## Copyright:            Copyright Â© 2017-2019 Thomas Corwin, et al. All Rights Reserved.
## License:              https://github.com/tom-corwin/tcdfx/blob/master/LICENSE.md
####################################################################################################

parameters:
  projectName: ''
  configuration: ''

steps:

- task: DotNetCoreCLI@2
  condition: and(eq( variables['Agent.OS'], 'Windows_NT' ), startsWith(variables['Build.SourceBranch'], 'ref/tags/v'))
  name: 'Run_DotNet_Build__WinNT_GA'
  displayName: 'Run `dotnet build` (WinNT|GA)'
  continueOnError: false
  inputs:
    command: 'build'
    projects: '$(Build.Repository.LocalPath)\sources\${{ parameters.projectName }}\${{ parameters.projectName }}.csproj'
    arguments: '--force /property:Configuration=${{ parameters.configuration }} /property:TCDFxIsCIBuild=true /property:TCDFxIsGABuild=true /property:TCDFxVersionMetadata=$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  condition: and(ne( variables['Agent.OS'], 'Windows_NT' ), startsWith(variables['Build.SourceBranch'], 'ref/tags/v'))
  name: 'Run_DotNet_Build__Unix_GA'
  displayName: 'Run `dotnet build` (Unix|GA)'
  continueOnError: false
  inputs:
    command: 'build'
    projects: '$(Build.Repository.LocalPath)/sources/${{ parameters.projectName }}/${{ parameters.projectName }}.csproj'
    arguments: '--force /property:Configuration=${{ parameters.configuration }} /property:TCDFxIsCIBuild=true /property:TCDFxIsGABuild=true /property:TCDFxVersionMetadata=$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  condition: and(eq( variables['Agent.OS'], 'Windows_NT' ), eq(variables['Build.Reason'], 'PullRequest'), not(startsWith(variables['Build.SourceBranch'], 'ref/tags/v')))
  name: 'Run_DotNet_Build__WinNT_PR'
  displayName: 'Run `dotnet build` (WinNT|PR)'
  continueOnError: false
  inputs:
    command: 'build'
    projects: '$(Build.Repository.LocalPath)\sources\${{ parameters.projectName }}\${{ parameters.projectName }}.csproj'
    arguments: '--force /property:Configuration=${{ parameters.configuration }} /property:TCDFxIsCIBuild=true /property:TCDFxIsGABuild=false /property:TCDFxVersionBuildType=pull /property:TCDFxVersionBuildNumber=$(System.PullRequest.PullRequestNumber) /property:TCDFxVersionMetadata=$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  condition: and(ne( variables['Agent.OS'], 'Windows_NT' ), eq(variables['Build.Reason'], 'PullRequest'), not(startsWith(variables['Build.SourceBranch'], 'ref/tags/v')))
  name: 'Run_DotNet_Build__Unix_PR'
  displayName: 'Run `dotnet build` (Unix|PR)'
  continueOnError: false
  inputs:
    command: 'build'
    projects: '$(Build.Repository.LocalPath)/sources/${{ parameters.projectName }}/${{ parameters.projectName }}.csproj'
    arguments: '--force /property:Configuration=${{ parameters.configuration }} /property:TCDFxIsCIBuild=true /property:TCDFxIsGABuild=false /property:TCDFxVersionBuildType=pull /property:TCDFxVersionBuildNumber=$(System.PullRequest.PullRequestNumber) /property:TCDFxVersionMetadata=$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  condition: and(eq( variables['Agent.OS'], 'Windows_NT' ), ne(variables['Build.Reason'], 'PullRequest'), not(startsWith(variables['Build.SourceBranch'], 'ref/tags/v')))
  name: 'Run_DotNet_Build__WinNT_CI'
  displayName: 'Run `dotnet build` (WinNT|CI)'
  continueOnError: false
  inputs:
    command: 'build'
    projects: '$(Build.Repository.LocalPath)\sources\${{ parameters.projectName }}\${{ parameters.projectName }}.csproj'
    arguments: '--force /property:Configuration=${{ parameters.configuration }}  /property:TCDFxIsCIBuild=true /property:TCDFxIsGABuild=false /property:TCDFxVersionBuildType=build /property:TCDFxVersionMetadata=$(Build.BuildNumber)'

- task: DotNetCoreCLI@2
  condition: and(ne( variables['Agent.OS'], 'Windows_NT' ), ne(variables['Build.Reason'], 'PullRequest'), not(startsWith(variables['Build.SourceBranch'], 'ref/tags/v')))
  name: 'Run_DotNet_Build__Unix_CI'
  displayName: 'Run `dotnet build` (Unix|CI)'
  continueOnError: false
  inputs:
    command: 'build'
    projects: '$(Build.Repository.LocalPath)/sources/${{ parameters.projectName }}/${{ parameters.projectName }}.csproj'
    arguments: '--force /property:Configuration=${{ parameters.configuration }} /property:TCDFxIsCIBuild=true /property:TCDFxIsGABuild=false /property:TCDFxVersionBuildType=build /property:TCDFxVersionMetadata=$(Build.BuildNumber)'